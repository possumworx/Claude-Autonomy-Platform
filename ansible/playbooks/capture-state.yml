---
# Capture current system state from a "golden" Claude installation
# Run this after making changes you want to propagate to other Claudes

- name: Capture Claude Infrastructure State
  hosts: localhost
  connection: local
  
  tasks:
    - name: Create config directories
      file:
        path: "{{ playbook_dir }}/../configs/{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - bin
        - bashrc
        - services
        - mcp
    
    - name: Find all files and links in ~/bin
      find:
        paths: "{{ ansible_env.HOME }}/bin"
        file_type: any
        recurse: no
      register: bin_items
      ignore_errors: yes
    
    - name: Process ~/bin items (copy files, record symlinks)
      shell: |
        if [ -L "{{ item.path }}" ]; then
          # It's a symlink - record where it points, converting to relative path
          target=$(readlink -f {{ item.path }})
          # Convert absolute path to relative path from home
          rel_target=$(echo "$target" | sed "s|^$HOME|~|")
          echo "{{ item.path | basename }}:$rel_target" >> {{ playbook_dir }}/../configs/bin/symlinks.txt
        else
          # It's a regular file - copy it
          cp -p "{{ item.path }}" "{{ playbook_dir }}/../configs/bin/"
        fi
      loop: "{{ bin_items.files | default([]) }}"
      when: bin_items.files is defined
    
    - name: Check if .bashrc exists
      stat:
        path: "{{ ansible_env.HOME }}/.bashrc"
      register: bashrc_stat
    
    - name: Copy .bashrc if it exists
      copy:
        src: "{{ ansible_env.HOME }}/.bashrc"
        dest: "{{ playbook_dir }}/../configs/bashrc/bashrc"
        mode: preserve
      when: bashrc_stat.stat.exists
    
    - name: Capture Claude-specific aliases from .bashrc
      shell: |
        grep -E "(alias|export|function).*(claude|clap|delta|check_health|read_channel|write_channel|swap|game|dreamhold|consciousness|gs|gd|gl|oops|update|context|list-commands|home)" ~/.bashrc | sed "s|$HOME|~|g" || true
      register: claude_aliases
      changed_when: false
    
    - name: Save Claude-specific aliases
      copy:
        content: "{{ claude_aliases.stdout }}"
        dest: "{{ playbook_dir }}/../configs/bashrc/claude_aliases.sh"
      when: claude_aliases.stdout | length > 0
    
    - name: Capture list of systemd user services
      shell: |
        systemctl --user list-unit-files --type=service --no-legend | grep -E "(autonomous|session|claude)" | awk '{print $1}' || true
      register: user_services
      changed_when: false
    
    - name: Save service list
      copy:
        content: "{{ user_services.stdout }}"
        dest: "{{ playbook_dir }}/../configs/services/claude_services.list"
      when: user_services.stdout | length > 0
    
    - name: Display captured state summary
      debug:
        msg: |
          State captured successfully!
          - Items in ~/bin: {{ bin_items.files | default([]) | length }}
          - Claude aliases found: {{ claude_aliases.stdout_lines | default([]) | length }}
          - User services found: {{ user_services.stdout_lines | default([]) | length }}
          
          Next steps:
          1. Review captured configs in ansible/configs/
          2. Commit changes to git
          3. Other Claudes can run update-myself.yml